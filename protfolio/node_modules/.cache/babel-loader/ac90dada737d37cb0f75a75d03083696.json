{"ast":null,"code":"import { TOTAL_SCREENS } from \"./commonUtils\";\nimport { Subject } from \"rxjs\";\nexport default class ScrollService {\n  constructor() {\n    this.scrollToHireMe = () => {\n      let contactMeScreen = document.getElementById(\"ContactMe\");\n      if (!contactMeScreen) return;\n      contactMeScreen.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n\n    this.scrollToHome = () => {\n      let HomeScreen = document.getElementById(\"Home\");\n      if (HomeScreen) return;\n      HomeScreen.scrollIntoView({\n        behavior: \"smooth\"\n      });\n    };\n\n    this.isElementInView = (elem, type) => {\n      let rec = elem.getBoundingClientRect();\n      let elementTop = rec.top;\n      let elementBottom = rec.Bottom;\n      let partiallyVisible = elementTop < Window.innerHeight && elementBottom >= 0;\n      let completleVisible = elementTop >= 0 && elementBottom <= window.innerHeight;\n\n      switch (type) {\n        case \"partial\":\n          return partiallyVisible;\n\n        case \"complete\":\n          return completleVisible;\n\n        default:\n          return false;\n      }\n    };\n\n    this.checkCurrentScreenUnderViewport = event => {\n      if (!event || Object.keys(event).length < 1) return;\n\n      for (let screen of TOTAL_SCREENS) {\n        let screenFromDOM = document.getElementById(screen.screen_name);\n        if (!screenFromDOM) continue;\n        let fullyVisible = this.isElementInView(screenFromDOM, \"complete\");\n        let partiallyVisible = this.isElementInView(screenFromDOM, \"partial\");\n\n        if (fullyVisible || partiallyVisible) {\n          if (fullyVisible && !screen.alreadyRendered) {\n            ScrollService.currentScreenFadeIn.next({\n              fadeInScreen: screen.screen_name\n            });\n            screen[\"alreadyRendered\"] = true;\n            break;\n          }\n        }\n\n        if (fullyVisible) {\n          ScrollService.currentScreenBroadCaster.next({\n            screenInView: screen.screen_name\n          });\n          break;\n        }\n      }\n    };\n\n    window.addEventListener('scroll', this.checkCurrentScreenUnderViewport);\n  }\n\n}\nScrollService.scrollHandler = new ScrollService();\nScrollService.currentScreenBroadCaster = new Subject();\nScrollService.currentScreenFadeIn = new Subject();","map":{"version":3,"names":["TOTAL_SCREENS","Subject","ScrollService","constructor","scrollToHireMe","contactMeScreen","document","getElementById","scrollIntoView","behavior","scrollToHome","HomeScreen","isElementInView","elem","type","rec","getBoundingClientRect","elementTop","top","elementBottom","Bottom","partiallyVisible","Window","innerHeight","completleVisible","window","checkCurrentScreenUnderViewport","event","Object","keys","length","screen","screenFromDOM","screen_name","fullyVisible","alreadyRendered","currentScreenFadeIn","next","fadeInScreen","currentScreenBroadCaster","screenInView","addEventListener","scrollHandler"],"sources":["C:/Users/mba12/huguesortfolio/myportfolio/protfolio/src/utilities/ScrollService.js"],"sourcesContent":["import { TOTAL_SCREENS } from \"./commonUtils\";\r\nimport {Subject} from \"rxjs\"\r\n\r\nexport default class ScrollService{\r\n    static scrollHandler = new ScrollService();\r\n\r\n    static currentScreenBroadCaster = new Subject()\r\n    static currentScreenFadeIn = new Subject()\r\n\r\n    constructor(){\r\n        window.addEventListener('scroll', this.checkCurrentScreenUnderViewport);\r\n        }\r\n    scrollToHireMe = () => {\r\n    let contactMeScreen = document.getElementById(\"ContactMe\");\r\n    if (!contactMeScreen) return;\r\n\r\n    contactMeScreen.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n           scrollToHome = () =>{\r\n            let HomeScreen = document.getElementById(\"Home\")\r\n            if(HomeScreen) return;\r\n            HomeScreen.scrollIntoView({behavior: \"smooth\"})\r\n        }\r\n    isElementInView = (elem, type)=>{\r\n        let rec = elem.getBoundingClientRect();\r\n        let elementTop = rec.top;\r\n        let elementBottom = rec.Bottom;\r\n\r\n        let partiallyVisible = elementTop<Window.innerHeight && elementBottom >=0;\r\n        let completleVisible = elementTop >= 0 && elementBottom <= window.innerHeight;\r\n\r\n        switch(type){\r\n           case \"partial\":\r\n           return partiallyVisible;\r\n\r\n           case \"complete\":\r\n            return completleVisible\r\n            default:\r\n                return false\r\n        }\r\n    }\r\n\r\n   checkCurrentScreenUnderViewport = (event) =>{\r\n    if(!event || Object.keys(event).length < 1)\r\n    return;\r\n    for(let screen of TOTAL_SCREENS){\r\n        let screenFromDOM = document.getElementById(screen.screen_name);\r\n            if(!screenFromDOM)\r\n            continue;\r\n\r\n\r\n            let fullyVisible = this.isElementInView(screenFromDOM, \"complete\")\r\n            let partiallyVisible = this.isElementInView(screenFromDOM, \"partial\")\r\n          if(fullyVisible || partiallyVisible){\r\n            if(fullyVisible && !screen.alreadyRendered){\r\n                ScrollService.currentScreenFadeIn.next({\r\n                    fadeInScreen: screen.screen_name\r\n                });\r\n                screen[\"alreadyRendered\"] = true;\r\n                break;\r\n            }\r\n         }\r\n            \r\n            if(fullyVisible){\r\n                ScrollService.currentScreenBroadCaster.next({\r\n                    screenInView: screen.screen_name\r\n                });\r\n                break;\r\n            }\r\n        }\r\n    }\r\n}\r\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,eAA9B;AACA,SAAQC,OAAR,QAAsB,MAAtB;AAEA,eAAe,MAAMC,aAAN,CAAmB;EAM9BC,WAAW,GAAE;IAAA,KAGbC,cAHa,GAGI,MAAM;MACvB,IAAIC,eAAe,GAAGC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,CAAtB;MACA,IAAI,CAACF,eAAL,EAAsB;MAEtBA,eAAe,CAACG,cAAhB,CAA+B;QAAEC,QAAQ,EAAE;MAAZ,CAA/B;IACD,CARc;;IAAA,KAUNC,YAVM,GAUS,MAAK;MACnB,IAAIC,UAAU,GAAGL,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAjB;MACA,IAAGI,UAAH,EAAe;MACfA,UAAU,CAACH,cAAX,CAA0B;QAACC,QAAQ,EAAE;MAAX,CAA1B;IACH,CAdQ;;IAAA,KAebG,eAfa,GAeK,CAACC,IAAD,EAAOC,IAAP,KAAc;MAC5B,IAAIC,GAAG,GAAGF,IAAI,CAACG,qBAAL,EAAV;MACA,IAAIC,UAAU,GAAGF,GAAG,CAACG,GAArB;MACA,IAAIC,aAAa,GAAGJ,GAAG,CAACK,MAAxB;MAEA,IAAIC,gBAAgB,GAAGJ,UAAU,GAACK,MAAM,CAACC,WAAlB,IAAiCJ,aAAa,IAAG,CAAxE;MACA,IAAIK,gBAAgB,GAAGP,UAAU,IAAI,CAAd,IAAmBE,aAAa,IAAIM,MAAM,CAACF,WAAlE;;MAEA,QAAOT,IAAP;QACG,KAAK,SAAL;UACA,OAAOO,gBAAP;;QAEA,KAAK,UAAL;UACC,OAAOG,gBAAP;;QACA;UACI,OAAO,KAAP;MAPR;IASH,CAhCY;;IAAA,KAkCdE,+BAlCc,GAkCqBC,KAAD,IAAU;MAC3C,IAAG,CAACA,KAAD,IAAUC,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,MAAnB,GAA4B,CAAzC,EACA;;MACA,KAAI,IAAIC,MAAR,IAAkB/B,aAAlB,EAAgC;QAC5B,IAAIgC,aAAa,GAAG1B,QAAQ,CAACC,cAAT,CAAwBwB,MAAM,CAACE,WAA/B,CAApB;QACI,IAAG,CAACD,aAAJ,EACA;QAGA,IAAIE,YAAY,GAAG,KAAKtB,eAAL,CAAqBoB,aAArB,EAAoC,UAApC,CAAnB;QACA,IAAIX,gBAAgB,GAAG,KAAKT,eAAL,CAAqBoB,aAArB,EAAoC,SAApC,CAAvB;;QACF,IAAGE,YAAY,IAAIb,gBAAnB,EAAoC;UAClC,IAAGa,YAAY,IAAI,CAACH,MAAM,CAACI,eAA3B,EAA2C;YACvCjC,aAAa,CAACkC,mBAAd,CAAkCC,IAAlC,CAAuC;cACnCC,YAAY,EAAEP,MAAM,CAACE;YADc,CAAvC;YAGAF,MAAM,CAAC,iBAAD,CAAN,GAA4B,IAA5B;YACA;UACH;QACH;;QAEE,IAAGG,YAAH,EAAgB;UACZhC,aAAa,CAACqC,wBAAd,CAAuCF,IAAvC,CAA4C;YACxCG,YAAY,EAAET,MAAM,CAACE;UADmB,CAA5C;UAGA;QACH;MACJ;IACJ,CA9DY;;IACTR,MAAM,CAACgB,gBAAP,CAAwB,QAAxB,EAAkC,KAAKf,+BAAvC;EACC;;AARyB;AAAbxB,a,CACVwC,a,GAAgB,IAAIxC,aAAJ,E;AADNA,a,CAGVqC,wB,GAA2B,IAAItC,OAAJ,E;AAHjBC,a,CAIVkC,mB,GAAsB,IAAInC,OAAJ,E"},"metadata":{},"sourceType":"module"}