{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\mba12\\\\huguesportfolio\\\\myportfolio\\\\protfolio\\\\src\\\\components\\\\Home\\\\Header\\\\Header.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { TOTAL_SCREENS, GET_SCREEN_INDEX } from '../../../utilities/commonUtils';\nimport ScrollService from '../../../utilities/ScrollService';\nimport { faBars } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon, fontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport './Header.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Header() {\n  _s();\n\n  const [selectedScreen, setSelectedScreen] = useState(0);\n  const [showHeaderOptions, setShowHeaderOption] = useState(false);\n\n  const updateCurrentScreen = currentScreen => {\n    if (currentScreen || !currentScreen.screenInView) return;\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView);\n    if (screenIndex < 0) return;\n  };\n\n  let currentScreenSubscription = ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen);\n\n  const getHeaderOptions = () => {\n    return TOTAL_SCREENS.map((screen, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: getHeaderOptionsClass(i),\n      onClick: () => switchScreen(i, screen),\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        children: screen.screen_name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)\n    }, screen.screen_name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this));\n  };\n\n  const getHeaderOptionsClass = index => {\n    let classes = \"header-option\";\n    if (index < TOTAL_SCREENS.length - 1) classes += \"header-option-seperator\";\n    if (selectedScreen === index) classes += \"selected-header-option\";\n    return;\n  };\n\n  const switchScreen = (index, screen) => {\n    let screenComponent = document.getElementById(screen.screen_name);\n    if (!screenComponent) return;\n    screenComponent.scrollIntoView({\n      behavior: 'smooth'\n    });\n    setSelectedScreen(index);\n    setShowHeaderOption(false);\n  };\n\n  useEffect(() => {\n    return () => {\n      currentScreenSubscription.unsubscribe();\n    };\n  }, [currentScreenSubscription]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header-container\",\n      onClick: () => setShowHeaderOption(!showHeaderOptions),\n      children: /*#__PURE__*/_jsxDEV(\"dir\", {\n        className: \"header-parent\",\n        children: [/*#__PURE__*/_jsxDEV(\"dir\", {\n          className: \"header-hamburger\",\n          onClick: () => setShowHeaderOption(!showHeaderOptions),\n          children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            className: \"header-hamburger-bars\",\n            icon: faBars\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 14\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"header-logo\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"MBUMBA\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: showHeaderOptions ? \"header-options show-hamburger-options\" : \"header-options\",\n          children: getHeaderOptions()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Header, \"8ldV4ujwft1XqCG+AS5W4V2wC/o=\");\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useEffect","TOTAL_SCREENS","GET_SCREEN_INDEX","ScrollService","faBars","FontAwesomeIcon","fontAwesomeIcon","Header","selectedScreen","setSelectedScreen","showHeaderOptions","setShowHeaderOption","updateCurrentScreen","currentScreen","screenInView","screenIndex","currentScreenSubscription","currentScreenBroadCaster","subscribe","getHeaderOptions","map","screen","i","getHeaderOptionsClass","switchScreen","screen_name","index","classes","length","screenComponent","document","getElementById","scrollIntoView","behavior","unsubscribe"],"sources":["C:/Users/mba12/huguesportfolio/myportfolio/protfolio/src/components/Home/Header/Header.js"],"sourcesContent":["import React, {useState,useEffect} from 'react'\r\nimport {TOTAL_SCREENS,GET_SCREEN_INDEX}from '../../../utilities/commonUtils';\r\nimport ScrollService from '../../../utilities/ScrollService'\r\nimport {faBars} from '@fortawesome/free-solid-svg-icons'\r\nimport {FontAwesomeIcon, fontAwesomeIcon} from '@fortawesome/react-fontawesome'\r\nimport './Header.css'\r\n\r\nfunction Header() {\r\n  const [selectedScreen, setSelectedScreen]=  useState(0);\r\n  const [showHeaderOptions, setShowHeaderOption] = useState(false);\r\n  \r\n\r\n  const updateCurrentScreen = (currentScreen) =>{\r\n    if (currentScreen || !currentScreen.screenInView)\r\n    return;\r\n    let screenIndex = GET_SCREEN_INDEX(currentScreen.screenInView)\r\n    if(screenIndex < 0)\r\n    return\r\n  }\r\n   let currentScreenSubscription = ScrollService.currentScreenBroadCaster.subscribe(updateCurrentScreen)\r\n  const getHeaderOptions = () =>{\r\n    return(\r\n      TOTAL_SCREENS.map((screen, i)=>(\r\n        <div key={screen.screen_name}className ={\r\n          getHeaderOptionsClass(i)} onClick={()=> switchScreen(i,screen)}>\r\n          <span>{screen.screen_name}</span>\r\n        </div>\r\n      ))\r\n    )\r\n  }\r\n\r\n  const getHeaderOptionsClass =(index) =>{\r\n    let classes = \"header-option\";\r\n    if(index < TOTAL_SCREENS.length -1) classes += \"header-option-seperator\";\r\n    \r\n    if(selectedScreen === index) classes +=\"selected-header-option\";\r\n    return\r\n  }\r\n\r\n  const switchScreen = (index, screen) =>{\r\n  let screenComponent = document.getElementById(screen.screen_name)\r\n  if(!screenComponent)\r\n  return\r\n\r\n  screenComponent.scrollIntoView({behavior: 'smooth'});\r\n  setSelectedScreen(index);\r\n  setShowHeaderOption(false);\r\n};\r\n\r\n useEffect(() => {\r\n    return () => {\r\n      currentScreenSubscription.unsubscribe();\r\n    };\r\n  }, [currentScreenSubscription]);\r\n  \r\n  return (\r\n    <div>\r\n       <div className='header-container' onClick={()=> setShowHeaderOption(!showHeaderOptions)}>\r\n        <dir className='header-parent'>\r\n          <dir className='header-hamburger' onClick={()=> setShowHeaderOption(!showHeaderOptions)}>\r\n             <FontAwesomeIcon className='header-hamburger-bars' icon={faBars}/>\r\n          </dir>\r\n          <div className='header-logo'>\r\n            <span>MBUMBA</span>\r\n          </div>\r\n          <div className={(showHeaderOptions)?\r\n             \"header-options show-hamburger-options\":\r\n             \"header-options\"}>\r\n            {getHeaderOptions()}\r\n          </div>\r\n        </dir>\r\n        </div> \r\n       \r\n       \r\n    </div>\r\n )\r\n}\r\n\r\nexport default Header"],"mappings":"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"},"metadata":{},"sourceType":"module"}